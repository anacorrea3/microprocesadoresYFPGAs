<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="2.0"/>
    <comp lib="0" loc="(180,320)" name="Clock"/>
    <comp lib="0" loc="(320,450)" name="Splitter">
      <a name="facing" val="north"/>
      <a name="fanout" val="3"/>
      <a name="incoming" val="3"/>
    </comp>
    <comp lib="0" loc="(640,340)" name="Splitter">
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
    </comp>
    <comp lib="5" loc="(140,450)" name="DipSwitch"/>
    <comp lib="5" loc="(160,230)" name="Button"/>
    <comp lib="5" loc="(710,300)" name="LED"/>
    <comp lib="5" loc="(710,330)" name="LED"/>
    <comp lib="5" loc="(710,360)" name="LED"/>
    <comp lib="5" loc="(710,390)" name="LED"/>
    <comp loc="(590,350)" name="motor">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(150,370)" to="(150,450)"/>
    <wire from="(150,370)" to="(370,370)"/>
    <wire from="(160,230)" to="(340,230)"/>
    <wire from="(160,380)" to="(160,450)"/>
    <wire from="(160,380)" to="(310,380)"/>
    <wire from="(170,390)" to="(170,450)"/>
    <wire from="(170,390)" to="(300,390)"/>
    <wire from="(180,320)" to="(370,320)"/>
    <wire from="(180,400)" to="(180,450)"/>
    <wire from="(180,400)" to="(290,400)"/>
    <wire from="(290,400)" to="(290,430)"/>
    <wire from="(300,390)" to="(300,430)"/>
    <wire from="(310,380)" to="(310,430)"/>
    <wire from="(320,450)" to="(360,450)"/>
    <wire from="(340,230)" to="(340,390)"/>
    <wire from="(340,390)" to="(370,390)"/>
    <wire from="(360,410)" to="(360,450)"/>
    <wire from="(360,410)" to="(370,410)"/>
    <wire from="(370,320)" to="(370,350)"/>
    <wire from="(590,350)" to="(640,350)"/>
    <wire from="(640,340)" to="(640,350)"/>
    <wire from="(660,300)" to="(710,300)"/>
    <wire from="(660,310)" to="(700,310)"/>
    <wire from="(660,320)" to="(690,320)"/>
    <wire from="(660,330)" to="(680,330)"/>
    <wire from="(680,330)" to="(680,390)"/>
    <wire from="(680,390)" to="(710,390)"/>
    <wire from="(690,320)" to="(690,360)"/>
    <wire from="(690,360)" to="(710,360)"/>
    <wire from="(700,310)" to="(700,330)"/>
    <wire from="(700,330)" to="(710,330)"/>
  </circuit>
  <vhdl name="motor">--------------------------------------------------------------------------------&#13;
-- Project :&#13; Motor de paso 
-- File    :&#13;
-- Autor   :&#13; Gustavo A. Castrillón 
-- Date    :&#13; 03-08-2023
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13; Creación de un motor de paso por medio de compuertas logicas 
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY motor IS&#13;
  PORT (&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    clock      : IN  std_logic;                    -- input bit example&#13;
    enable 	: IN std_logic; 

    reset 	: in std_logic; 
    selector 	: in std_logic_vector(2 downto 0); 
    salida 	: out std_logic_vector(3 downto 0)
    );&#13;
END motor;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;


-- "000" -&gt; S0 -&gt; S1 -&gt; S2 -&gt; S3 -&gt; S4 -&gt; S5 -&gt; S6 -&gt; S7 
-- "001" -&gt; S0 -&gt; S2 -&gt; S4 -&gt; S6
-- "010" -&gt; S1 -&gt; S3 -&gt; S5 -&gt; S7 
&#13;
ARCHITECTURE TypeArchitecture OF motor IS&#13;
&#13;	type estados_motor is (s0, s1, s2, s3, s4, s5, s6, s7);
	signal estado_actual : estados_motor;
	
BEGIN&#13;
&#13;	motor1: process(clock,reset)
	begin 
		if reset = '1' then
			estado_actual &lt;= s0; 
			salida &lt;= "0000"; 
		elsif rising_edge(clock) then
			case estado_actual is 
			 	when s0 =&gt; 
			 		if enable = '1' then
			 			salida &lt;= "0001";
			 			case selector is
			 			when "000" =&gt; estado_actual &lt;= s1; 
			 			when "001" =&gt; estado_actual &lt;= s2; 
			 			when "010" =&gt; estado_actual &lt;= s1; 
			 			when "100" =&gt; estado_actual &lt;= s7; 
			 			when "101" =&gt; estado_actual &lt;= s6; 
			 			when "110" =&gt; estado_actual &lt;= s7; 
			 			when others =&gt; null; 
			 			end case; 
					else 
						salida &lt;= "0000";
						estado_actual &lt;= estado_actual;  
					end if; 

				when s1 =&gt; 
			 		if enable = '1' then
			 			salida &lt;= "0011";
			 			case selector is
			 			when "000" =&gt; estado_actual &lt;= s2; 
			 			when "001" =&gt; estado_actual &lt;= s2; 
			 			when "010" =&gt; estado_actual &lt;= s3; 
			 			when "100" =&gt; estado_actual &lt;= s0; 
			 			when "101" =&gt; estado_actual &lt;= s6; 
			 			when "110" =&gt; estado_actual &lt;= s7; 
			 			when others =&gt; null; 
			 			end case; 
					else 
						salida &lt;= "0000";
						estado_actual &lt;= s0;  
					end if; 
				
				when s2 =&gt; 
			 		if enable = '1' then
			 			salida &lt;= "0010";
			 			case selector is
			 			when "000" =&gt; estado_actual &lt;= s3; 
			 			when "001" =&gt; estado_actual &lt;= s4; 
			 			when "010" =&gt; estado_actual &lt;= s3; 
			 			when "100" =&gt; estado_actual &lt;= s1; 
			 			when "101" =&gt; estado_actual &lt;= s0; 
			 			when "110" =&gt; estado_actual &lt;= s1; 
			 			when others =&gt; null; 
			 			end case; 
					else 
						salida &lt;= "0000";
						estado_actual &lt;= s0;  
					end if;
				
				when s3 =&gt; 
			 		if enable = '1' then
			 			salida &lt;= "0110";
			 			case selector is
			 			when "000" =&gt; estado_actual &lt;= s4; 
			 			when "001" =&gt; estado_actual &lt;= s4; 
			 			when "010" =&gt; estado_actual &lt;= s5; 
			 			when "100" =&gt; estado_actual &lt;= s2; 
			 			when "101" =&gt; estado_actual &lt;= s2; 
			 			when "110" =&gt; estado_actual &lt;= s1; 
			 			when others =&gt; null; 
			 			end case; 
					else 
						salida &lt;= "0000";
						estado_actual &lt;= s0;  
					end if;
				
				when s4 =&gt; 
			 		if enable = '1' then
			 			salida &lt;= "0100";
			 			case selector is
			 			when "000" =&gt; estado_actual &lt;= s5; 
			 			when "001" =&gt; estado_actual &lt;= s6; 
			 			when "010" =&gt; estado_actual &lt;= s5; 
			 			when "100" =&gt; estado_actual &lt;= s3; 
			 			when "101" =&gt; estado_actual &lt;= s2; 
			 			when "110" =&gt; estado_actual &lt;= s3; 
			 			when others =&gt; null; 
			 			end case; 
					else 
						salida &lt;= "0000";
						estado_actual &lt;= s0;  
					end if;
				
				when s5 =&gt; 
			 		if enable = '1' then
			 			salida &lt;= "1100";
			 			case selector is
			 			when "000" =&gt; estado_actual &lt;= s6; 
			 			when "001" =&gt; estado_actual &lt;= s6; 
			 			when "010" =&gt; estado_actual &lt;= s7; 
			 			when "100" =&gt; estado_actual &lt;= s4; 
			 			when "101" =&gt; estado_actual &lt;= s4; 
			 			when "110" =&gt; estado_actual &lt;= s3; 
			 			when others =&gt; null; 
			 			end case; 
					else 
						salida &lt;= "0000";
						estado_actual &lt;= s0;  
					end if;
				
				when s6 =&gt; 
			 		if enable = '1' then
			 			salida &lt;= "1000";
			 			case selector is
			 			when "000" =&gt; estado_actual &lt;= s7; 
			 			when "001" =&gt; estado_actual &lt;= s0; 
			 			when "010" =&gt; estado_actual &lt;= s7; 
			 			when "100" =&gt; estado_actual &lt;= s5; 
			 			when "101" =&gt; estado_actual &lt;= s4; 
			 			when "110" =&gt; estado_actual &lt;= s5; 
			 			when others =&gt; null; 
			 			end case; 
					else 
						salida &lt;= "0000";
						estado_actual &lt;= s0;  
					end if;
				
				when s7 =&gt; 
			 		if enable = '1' then
			 			salida &lt;= "1001";
			 			case selector is
			 			when "000" =&gt; estado_actual &lt;= s0; 
			 			when "001" =&gt; estado_actual &lt;= s0; 
			 			when "010" =&gt; estado_actual &lt;= s1; 
			 			when "100" =&gt; estado_actual &lt;= s6; 
			 			when "101" =&gt; estado_actual &lt;= s6; 
			 			when "110" =&gt; estado_actual &lt;= s5; 
			 			when others =&gt; null; 
			 			end case; 
					else 
						salida &lt;= "0000";
						estado_actual &lt;= s0;  
					end if;

				when others =&gt; 
					salida &lt;= "0000"; 
					estado_actual &lt;= s0; 
			end case; 
		end if; 
			 			
	end process;
&#13;
END TypeArchitecture;&#13;
</vhdl>
</project>
