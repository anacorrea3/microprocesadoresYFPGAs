<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
  </circuit>
  <vhdl name="microprocesador">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY microprocesador IS
  PORT (
  ------------------------------------------------------------------------------
  	clock : in std:logic; 
  	
    
    );
END microprocesador;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF microprocesador IS
--Puertos de entrada 
    entrada1 	: IN  std_logic_vector(7 DOWNTO 0); 
    entrada2 	: IN  std_logic_vector(7 DOWNTO 0); 
--Puertos de salida 
    salida 	: OUT	 std_logic_vector(7 DOWNTO 0);
--Selector 
    selector 	: signal std_logic_vector (3 DOWNTO 0); 
    control 	: OUT	std_logic_vector (7 DOWNTO 0);
    --control(0): si el resultado es cero; 
    --control(1): Para el carry; 
    --control(2): Para el negativo; 
BEGIN
	
		
	if selector = "0001" then
		--Suma de las entradas 
		salida &lt;= entrada1 + entrada2; 
	else if selector = "0010" then 
		--Resta de las entradas
		salida &lt;= entrada1 - entrada2; 
		if salida(7) = 1 then 
			control(2) = 1; 
		
	else if selector = "0011" then
		--Incremento de A  
		for i in 0 to 7 loop: 
			salida(i) &lt;= entrada1(i) + 1; 
	else if selector = "0100" then 
		--Decremento de A 
		for i in 0 to 7 loop:
			salida(i) &lt;= entrada(i) - 1; 
	else if selector = "0101" then 
		--Desplazamiento a la derecha 
		salida(0) &lt;= 0; 
		for i in 0 to 6 loop: 
			salida(i+1) &lt;= entrada1(i);  
	else if selector = "0110" then 
		--Desplazamiento a la izquierda 
		salida(7) &lt;=0; 
		for i in 6 to 0 loop: 
			salida(i+1) &lt;= entrada1(i); 
	else if selector = "0111" then
		--A and B 
		salida &lt;= entrada1 and entrada2;  
	else if selector = "1000" then 
		--A or B 
		salida &lt;= entrada1 or entrada2; 
	else if selector = "1001" then 
		--A xor B
		salida &lt;= entrada1 xor entrada2; 
	else if selector = "1010" then 
		-- Negaci√≥n de A 
		salida &lt;= not(entrada1); 
	else if selector = "1011" then 
		--complemento de A 
		
	else
		--reset el programa 

END TypeArchitecture;
</vhdl>
</project>
